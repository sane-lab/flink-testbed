import json
from collections import defaultdict
import re

# Example input data
key_arrival_rate_str = "{0=0.04439763779527556, 1=0.023784448818897616, 2=0.01955610236220471, 3=0.023255905511811007, 4=0.027484251968503917, 5=0.017970472440944865, 6=0.023255905511811007, 7=0.023784448818897616, 8=0.02272736220472439, 9=0.028541338582677142, 10=0.03435531496062989, 11=0.020084645669291322, 12=0.017970472440944865, 13=0.02537007874015746, 14=0.023255905511811007, 15=0.03329822834645667, 16=0.0306555118110236, 17=0.02272736220472439, 18=0.03171259842519683, 19=0.027484251968503917, 20=0.017970472440944865, 21=0.03224114173228344, 22=0.024312992125984232, 23=0.03435531496062989, 24=0.021670275590551163, 25=0.026955708661417305, 26=0.023255905511811007, 27=0.02272736220472439, 28=0.01955610236220471, 29=0.029598425196850374, 30=0.02537007874015746, 31=0.027484251968503917, 32=0.032769685039370056, 33=0.020613188976377938, 34=0.03435531496062989, 35=0.023255905511811007, 36=0.017441929133858253, 37=0.02906988188976376, 38=0.028012795275590526, 39=0.029598425196850374, 40=0.02114173228346455, 41=0.01849901574803148, 42=0.03118405511811021, 43=0.014270669291338571, 44=0.02642716535433069, 45=0.023784448818897616, 46=0.02219881889763778, 47=0.03329822834645667, 48=0.024312992125984232, 49=0.028012795275590526, 50=0.017441929133858253, 51=0.04756889763779523, 52=0.02537007874015746, 53=0.01691338582677164, 54=0.020084645669291322, 55=0.02642716535433069, 56=0.01691338582677164, 57=0.02537007874015746, 58=0.021670275590551163, 59=0.02537007874015746, 60=0.020613188976377938, 61=0.02642716535433069, 62=0.03752657480314958, 63=0.020084645669291322, 64=0.01849901574803148, 65=0.025898622047244073, 66=0.021670275590551163, 67=0.014799212598425187, 68=0.0306555118110236, 69=0.01849901574803148, 70=0.02272736220472439, 71=0.01691338582677164, 72=0.025898622047244073, 73=0.017441929133858253, 74=0.025898622047244073, 75=0.041226377952755876, 76=0.024312992125984232, 77=0.04069783464566926, 78=0.021670275590551163, 79=0.025898622047244073, 80=0.02219881889763778, 81=0.020613188976377938, 82=0.025898622047244073, 83=0.03911220472440942, 84=0.02537007874015746, 85=0.01109940944881889, 86=0.020084645669291322, 87=0.02272736220472439, 88=0.02272736220472439, 89=0.0422834645669291, 90=0.02219881889763778, 91=0.024312992125984232, 92=0.03435531496062989, 93=0.02219881889763778, 94=0.03964074803149603, 95=0.023784448818897616, 96=0.020613188976377938, 97=0.023784448818897616, 98=0.017441929133858253, 99=0.016384842519685028, 100=0.024841535433070848, 101=0.020084645669291322, 102=0.01849901574803148, 103=0.03224114173228344, 104=0.032769685039370056, 105=0.023255905511811007, 106=0.020613188976377938, 107=0.02642716535433069, 108=0.024841535433070848, 109=0.025898622047244073, 110=0.02272736220472439, 111=0.01955610236220471, 112=0.020084645669291322, 113=0.017970472440944865, 114=0.024841535433070848, 115=0.02537007874015746, 116=0.0306555118110236, 117=0.019027559055118097, 118=0.02272736220472439, 119=0.01955610236220471, 120=0.021670275590551163, 121=0.021670275590551163, 122=0.041226377952755876, 123=0.0306555118110236, 124=0.024841535433070848, 125=0.03646948818897635, 126=0.021670275590551163, 127=0.02906988188976376}"
key_task_mapping_str = "{d2336f79a0d60b5a4b16c8769ec82e47_49=[75, 119, 113, 86, 105, 13, 123, 116, 63, 96, 41, 25, 11], d2336f79a0d60b5a4b16c8769ec82e47_46=[50, 76, 126, 85, 53, 81, 102, 62, 3, 48, 32, 52, 97, 64], d2336f79a0d60b5a4b16c8769ec82e47_47=[18, 47, 16, 28, 49, 39, 23, 99, 24, 61, 60, 87], d2336f79a0d60b5a4b16c8769ec82e47_55=[117, 27, 19, 78, 121], d2336f79a0d60b5a4b16c8769ec82e47_56=[74, 109, 107, 1, 118, 6, 92, 2, 124, 80, 110, 9], d2336f79a0d60b5a4b16c8769ec82e47_20=[72, 56, 42, 21, 65, 82, 22, 54, 44, 83, 103, 73], d2336f79a0d60b5a4b16c8769ec82e47_54=[98, 122, 120, 7, 79, 90, 36, 14, 29, 17, 15, 68], d2336f79a0d60b5a4b16c8769ec82e47_51=[111, 8, 71, 31, 12, 38, 59, 114, 93, 100, 35, 57, 70], d2336f79a0d60b5a4b16c8769ec82e47_52=[125, 33, 4, 89, 26, 45, 67, 115, 88, 40, 55, 108], d2336f79a0d60b5a4b16c8769ec82e47_19=[69, 5, 84, 95, 66, 94, 20, 101, 127, 112, 77, 10], d2336f79a0d60b5a4b16c8769ec82e47_29=[104, 106, 43, 58, 37, 46, 91, 51, 34, 0, 30]}"

# Function to convert the custom formatted string to JSON-compatible format
def convert_to_json_compatible(input_str):
    # Replace = with :
    input_str = input_str.replace("=", ": ")
    # Wrap keys with quotes if they are not already
    input_str = re.sub(r"(\w+):", r'"\1":', input_str)
    # Replace single quotes with double quotes if there are any
    input_str = input_str.replace("'", '"')
    return input_str

# Convert the strings into JSON-compatible format
key_arrival_rate_json = convert_to_json_compatible(key_arrival_rate_str)
key_task_mapping_json = convert_to_json_compatible(key_task_mapping_str)

# Parse the JSON strings into dictionaries
key_arrival_rate = json.loads(key_arrival_rate_json)
key_task_mapping = json.loads(key_task_mapping_json)

# Initialize a dictionary to store the total arrival rate for each task
task_total_arrival_rate = defaultdict(float)

# Compute the total arrival rate for each task
for task, keys in key_task_mapping.items():
    total_rate = sum(key_arrival_rate[str(key)] for key in keys)
    task_total_arrival_rate[task] = total_rate

# Output the total arrival rates for each task
for task, rate in task_total_arrival_rate.items():
    print(f"{task}: {rate}")
print("total arrival: " + str(sum(task_total_arrival_rate.values())))